upstream client_web {
    server client_weba:80 fail_timeout=30s max_fails=3;
    server client_webb:80 fail_timeout=30s max_fails=3;
    server client_webc:80 fail_timeout=30s max_fails=3;
}

upstream backend_web {
    server backend_node1:80 fail_timeout=30s max_fails=3;
    server backend_node2:80 fail_timeout=30s max_fails=3;
}

server {
    # listen       80;
    listen       443 ssl;
    # listen  [::]:80;
    server_name  www.paaa.cf;

    # ssl    on;
    # ssl_certificate    /ssl/test.lab.crt; (or bundle.crt)
    # ssl_certificate_key    /ssl/priv.key;
    ssl_certificate     /ssl/certificate.crt;
    ssl_certificate_key /ssl/private.key;
    # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers         HIGH:!aNULL:!MD5;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        proxy_pass http://client_web/;
    }

    location /backend {
        proxy_pass http://backend_web/;
    }

    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    # }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    # error_page   500 502 503 504  /50x.html;
    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

